/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as BoardsBoardIdImport } from './routes/boards.$boardId'
import { Route as BoardsBoardIdDeleteImport } from './routes/boards.$boardId.delete'
import { Route as BoardsBoardIdAddTaskImport } from './routes/boards.$boardId.add-task'
import { Route as BoardsBoardIdAddImport } from './routes/boards.$boardId.add'
import { Route as BoardsBoardIdColumnColumnIdTaskTaskIdIndexImport } from './routes/boards.$boardId.column.$columnId.task.$taskId.index'
import { Route as BoardsBoardIdColumnColumnIdTaskTaskIdEditImport } from './routes/boards.$boardId.column.$columnId.task.$taskId.edit'
import { Route as BoardsBoardIdColumnColumnIdTaskTaskIdDeleteImport } from './routes/boards.$boardId.column.$columnId.task.$taskId.delete'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BoardsBoardIdRoute = BoardsBoardIdImport.update({
  path: '/boards/$boardId',
  getParentRoute: () => rootRoute,
} as any)

const BoardsBoardIdDeleteRoute = BoardsBoardIdDeleteImport.update({
  path: '/delete',
  getParentRoute: () => BoardsBoardIdRoute,
} as any)

const BoardsBoardIdAddTaskRoute = BoardsBoardIdAddTaskImport.update({
  path: '/add-task',
  getParentRoute: () => BoardsBoardIdRoute,
} as any)

const BoardsBoardIdAddRoute = BoardsBoardIdAddImport.update({
  path: '/add',
  getParentRoute: () => BoardsBoardIdRoute,
} as any)

const BoardsBoardIdColumnColumnIdTaskTaskIdIndexRoute =
  BoardsBoardIdColumnColumnIdTaskTaskIdIndexImport.update({
    path: '/column/$columnId/task/$taskId/',
    getParentRoute: () => BoardsBoardIdRoute,
  } as any)

const BoardsBoardIdColumnColumnIdTaskTaskIdEditRoute =
  BoardsBoardIdColumnColumnIdTaskTaskIdEditImport.update({
    path: '/column/$columnId/task/$taskId/edit',
    getParentRoute: () => BoardsBoardIdRoute,
  } as any)

const BoardsBoardIdColumnColumnIdTaskTaskIdDeleteRoute =
  BoardsBoardIdColumnColumnIdTaskTaskIdDeleteImport.update({
    path: '/column/$columnId/task/$taskId/delete',
    getParentRoute: () => BoardsBoardIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/boards/$boardId': {
      preLoaderRoute: typeof BoardsBoardIdImport
      parentRoute: typeof rootRoute
    }
    '/boards/$boardId/add': {
      preLoaderRoute: typeof BoardsBoardIdAddImport
      parentRoute: typeof BoardsBoardIdImport
    }
    '/boards/$boardId/add-task': {
      preLoaderRoute: typeof BoardsBoardIdAddTaskImport
      parentRoute: typeof BoardsBoardIdImport
    }
    '/boards/$boardId/delete': {
      preLoaderRoute: typeof BoardsBoardIdDeleteImport
      parentRoute: typeof BoardsBoardIdImport
    }
    '/boards/$boardId/column/$columnId/task/$taskId/delete': {
      preLoaderRoute: typeof BoardsBoardIdColumnColumnIdTaskTaskIdDeleteImport
      parentRoute: typeof BoardsBoardIdImport
    }
    '/boards/$boardId/column/$columnId/task/$taskId/edit': {
      preLoaderRoute: typeof BoardsBoardIdColumnColumnIdTaskTaskIdEditImport
      parentRoute: typeof BoardsBoardIdImport
    }
    '/boards/$boardId/column/$columnId/task/$taskId/': {
      preLoaderRoute: typeof BoardsBoardIdColumnColumnIdTaskTaskIdIndexImport
      parentRoute: typeof BoardsBoardIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  BoardsBoardIdRoute.addChildren([
    BoardsBoardIdAddRoute,
    BoardsBoardIdAddTaskRoute,
    BoardsBoardIdDeleteRoute,
    BoardsBoardIdColumnColumnIdTaskTaskIdDeleteRoute,
    BoardsBoardIdColumnColumnIdTaskTaskIdEditRoute,
    BoardsBoardIdColumnColumnIdTaskTaskIdIndexRoute,
  ]),
])

/* prettier-ignore-end */
